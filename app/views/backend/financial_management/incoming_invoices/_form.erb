<%= render :partial => "form_header",:locals => {:f => f} %>
<%= render :partial => "form_items",:locals => {:f => f} %>


<script type="text/javascript">


		
    function action_after_complete_for_tenderer(item,tender_type){
    switch (item.code_response) {
        case ("ok"):
            $("#account_payable_incoming_invoice_tenderer_id").val(item.supplier_id)
				
            break;
        case ("no-ok"):
            alert('no-ok');
            break;
        /*default:
            alert('problemas buscando');*/
    }
  }
  
  function action_after_complete_for_supplier(item,tender_type){
    switch (item.code_response) {
        case ("ok"):
            $("#account_payable_incoming_invoice_supplier_id").val(item.supplier_id)
            $("#account_payable_incoming_invoice_tenderer_id").val(item.supplier_id)
            $("#account_payable_incoming_invoice_tenderer_name").val(item.fullname)
				$.ajax({
				  type: "POST",
				  url: "<%= search_supplier_withholding_taxes_backend_financial_management_incoming_invoices_url %>",
				  data: {supplier_id: item.supplier_id}
				});
            break;
        case ("no-ok"):
            alert('no-ok');
            break;
        /*default:
            alert('problemas buscando');*/
    }
  }  
  



  function action_after_complete_for_contacts(item){
    switch (item.code_response) {
        case ("ok"):
            $("#incoming_invoice_supplier_id").val(item.supplier_id)
				
            break;
        case ("no-ok"):
            alert('no-ok');
            break;
        default:
            alert('problemas buscando');
    }
  }

  function action_after_complete_for_raw_materials(item){
	 $("#add_product_button").show();
    switch (item.code_response) {
        case ("ok"):
            $("#account_payable_incoming_invoice_position_material_raw_material_id").val(item.id);
				$("#account_payable_incoming_invoice_position_description").val(item.name);
            break;
        case ("no-ok"):
            alert('no-ok');
            break;
		  case ("no-found"):
            break;
        default:
            alert('problemas buscando');
    }
  }

function calculate_total_position(){
  if($("#account_payable_incoming_invoice_position_sub_total").val()!= "" && $("#account_payable_incoming_invoice_position_quantity").val() != ""){
		sub_total = $("#account_payable_incoming_invoice_position_sub_total").val();
		quantity = $("#account_payable_incoming_invoice_position_quantity").val();
		tax = parseFloat($("#account_payable_incoming_invoice_position_tax_id option:selected").text());
		if(isNaN(tax))
		tax = 0;
		taxable = parseFloat(sub_total)*parseFloat(quantity)
		tax_amount = taxable*tax/100;
		total = taxable + tax_amount;
		$("#account_payable_incoming_invoice_position_tax_amount").val((tax_amount).toFixed(2));
		$("#account_payable_incoming_invoice_position_taxable").val((taxable).toFixed(2))
		$("#account_payable_incoming_invoice_position_total").val((total).toFixed(2));
  }
}

  function calculate_total_amount(){
	 var total_amount = 0;
         var retained_amount = 0;
	 $(".sum_amount").each(function (index, domEle) {
              total_amount += parseFloat($(domEle).val())
	 });
         
         $(".retained_amount").each(function (index, domEle) {
           retention_value = parseFloat($(domEle).val());
           if(isNaN(retention_value))
             retained_amount += 0
           else
              retained_amount += retention_value;
	 });
         retained_amount = retained_amount.toFixed(2);
         $("#account_payable_incoming_invoice_retained_amount").val(retained_amount);
	 //retained_amount = parseFloat($("#account_payable_incoming_invoice_retained_amount").val());
	 total_amount = (total_amount).toFixed(2);
         amount_total_to_paid = (total_amount - retained_amount).toFixed(2);
	 $("#account_payable_incoming_invoice_total_amount").val(total_amount)
         $("#account_payable_incoming_invoice_amount_total_to_paid").val(amount_total_to_paid)

  }




		$(document).ready(function(){
                   $("#account_payable_incoming_invoice_tenderer_name").autocomplete({
                          source: "<%= autocomplete_by_supplier_name_backend_contacts_url %>",
                          minLength: 3,
                          select: function( event, ui ) {
                            if(ui.item)
                                action_after_complete_for_tenderer(ui.item);
                          },
                          open: function( event, ui ) {
                             $('#account_payable_incoming_invoice_tenderer_id').val('')
                          }
                     });
                     
                      $("#account_payable_incoming_invoice_supplier_name").autocomplete({
                          source: "<%= autocomplete_by_supplier_name_backend_contacts_url %>",
                          minLength: 3,
                          select: function( event, ui ) {
                            if(ui.item)
                                action_after_complete_for_supplier(ui.item);
                          },
                          open: function( event, ui ) {
                             $('#account_payable_incoming_invoice_supplier_id').val('')
                          }
                     });
                     
                     
                     

		  $("#account_payable_incoming_invoice_material_purchase_order").blur( function () {
			 $(this).strPadLeft(6);
			 $.ajax({
				  type: "POST",
				  url: "<%= confirm_purchase_order_backend_financial_management_incoming_invoices_url %>",
				  data: {purchase_order_id: $(this).val()}
				});
		  });

		  $("#account_payable_incoming_invoice_position_description").autocomplete({
			  source: "<%= autocomplete_by_name_backend_material_management_raw_materials_url %>",
			  minLength: 3,
			  search: function( event, ui ) {
				 $("#incoming_invoice_position_raw_material_id").val("");
				 $("#add_product_button").show();
			  },
			  select: function( event, ui ) {
				 if(ui.item)
					 action_after_complete_for_raw_materials(ui.item);
			  }
		  });

          $("#account_payable_incoming_invoice_posting_date").datepicker({
          changeMonth: true,
          dateFormat: 'yy-mm-dd',
          minDate: "-0",
          maxDate: "+35",
          yearRange: 'c-80:c+30',
          beforeShowDay: noWeekendsOrHolidays
        });

        $("#account_payable_incoming_invoice_invoice_date").datepicker({
          changeMonth: true,
          dateFormat: 'yy-mm-dd',
          maxDate: "5",
          yearRange: 'c-80:c+30'
        });
		  $("#account_payable_incoming_invoice_purchase_ledger_period").datepicker({
			 changeMonth: true,
			 changeYear: true,
			 maxDate: "5",
			 yearRange: 'c-80:c+30',
			 showButtonPanel: true,
			 dateFormat: 'yy-mm'
		  });



		$("#account_payable_incoming_invoice_position_sub_total,#account_payable_incoming_invoice_position_quantity").blur(function(){
                   calculate_total_position();
		});
		$("#account_payable_incoming_invoice_position_tax_id").change(function(){
                   calculate_total_position();
		});
		$("#account_payable_incoming_invoice_associated_purchase_ledgers").click(function () {
		  if($(this).is(':checked'))
			 $("#account_payable_incoming_invoice_purchase_ledger_period_input").show()
		  else
			 $("#account_payable_incoming_invoice_purchase_ledger_period_input").hide()
		});

	  $("#account_payable_incoming_invoice_sub_total_amount").blur( function () {
		 //calculate_total_amount()
		 $(".subject_retention_amount").blur()
	  });
		
	});
</script>